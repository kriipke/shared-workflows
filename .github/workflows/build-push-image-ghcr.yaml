name: Docker Build & Publish (Reusable)

on:
  workflow_call:
    inputs:
      registry:
        description: "Container registry to push to (default: ghcr.io)"
        required: false
        default: ghcr.io
        type: string
      image_name:
        description: "Image name to publish (default: owner/repo)"
        required: false
        default: ${{ github.repository }}
        type: string
      push:
        description: "Whether to push the image (true/false)"
        required: false
        default: true
        type: boolean
      build_args:
        description: "Docker build arguments (multi-line string: KEY=VALUE per line)"
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Install cosign
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.2

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to registry
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}

      # Build and optionally push image
      - name: Build & push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          ${{ inputs.build_args && format('build-args: |
            {0}', inputs.build_args) || '' }}

      # Sign image (only if push is true)
      - name: Sign image with cosign
        if: ${{ inputs.push == 'true' }}
        run: |
          cosign sign --yes ${{ steps.meta.outputs.tags }}
